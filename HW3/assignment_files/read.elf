ELF Header:
  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF64
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              DYN (Shared object file)
  Machine:                           Advanced Micro Devices X86-64
  Version:                           0x1
  Entry point address:               0x9e0
  Start of program headers:          64 (bytes into file)
  Start of section headers:          11456 (bytes into file)
  Flags:                             0x0
  Size of this header:               64 (bytes)
  Size of program headers:           56 (bytes)
  Number of program headers:         9
  Size of section headers:           64 (bytes)
  Number of section headers:         29
  Section header string table index: 28

Section Headers:
  [Nr] Name              Type             Address           Offset
       Size              EntSize          Flags  Link  Info  Align
  [ 0]                   NULL             0000000000000000  00000000
       0000000000000000  0000000000000000           0     0     0
  [ 1] .interp           PROGBITS         0000000000000238  00000238
       000000000000001c  0000000000000000   A       0     0     1
  [ 2] .note.ABI-tag     NOTE             0000000000000254  00000254
       0000000000000020  0000000000000000   A       0     0     4
  [ 3] .note.gnu.build-i NOTE             0000000000000274  00000274
       0000000000000024  0000000000000000   A       0     0     4
  [ 4] .gnu.hash         GNU_HASH         0000000000000298  00000298
       000000000000001c  0000000000000000   A       5     0     8
  [ 5] .dynsym           DYNSYM           00000000000002b8  000002b8
       0000000000000228  0000000000000018   A       6     1     8
  [ 6] .dynstr           STRTAB           00000000000004e0  000004e0
       00000000000000ff  0000000000000000   A       0     0     1
  [ 7] .gnu.version      VERSYM           00000000000005e0  000005e0
       000000000000002e  0000000000000002   A       5     0     2
  [ 8] .gnu.version_r    VERNEED          0000000000000610  00000610
       0000000000000030  0000000000000000   A       6     1     8
  [ 9] .rela.dyn         RELA             0000000000000640  00000640
       00000000000000c0  0000000000000018   A       5     0     8
  [10] .rela.plt         RELA             0000000000000700  00000700
       0000000000000198  0000000000000018  AI       5    22     8
  [11] .init             PROGBITS         0000000000000898  00000898
       0000000000000017  0000000000000000  AX       0     0     4
  [12] .plt              PROGBITS         00000000000008b0  000008b0
       0000000000000120  0000000000000010  AX       0     0     16
  [13] .plt.got          PROGBITS         00000000000009d0  000009d0
       0000000000000008  0000000000000008  AX       0     0     8
  [14] .text             PROGBITS         00000000000009e0  000009e0
       0000000000000562  0000000000000000  AX       0     0     16
  [15] .fini             PROGBITS         0000000000000f44  00000f44
       0000000000000009  0000000000000000  AX       0     0     4
  [16] .rodata           PROGBITS         0000000000000f50  00000f50
       000000000000009d  0000000000000000   A       0     0     8
  [17] .eh_frame_hdr     PROGBITS         0000000000000ff0  00000ff0
       0000000000000064  0000000000000000   A       0     0     4
  [18] .eh_frame         PROGBITS         0000000000001058  00001058
       0000000000000180  0000000000000000   A       0     0     8
  [19] .init_array       INIT_ARRAY       0000000000201d38  00001d38
       0000000000000008  0000000000000008  WA       0     0     8
  [20] .fini_array       FINI_ARRAY       0000000000201d40  00001d40
       0000000000000008  0000000000000008  WA       0     0     8
  [21] .dynamic          DYNAMIC          0000000000201d48  00001d48
       00000000000001f0  0000000000000010  WA       6     0     8
  [22] .got              PROGBITS         0000000000201f38  00001f38
       00000000000000c8  0000000000000008  WA       0     0     8
  [23] .data             PROGBITS         0000000000202000  00002000
       0000000000000010  0000000000000000  WA       0     0     8
  [24] .bss              NOBITS           0000000000202010  00002010
       0000000000000010  0000000000000000  WA       0     0     8
  [25] .comment          PROGBITS         0000000000000000  00002010
       0000000000000029  0000000000000001  MS       0     0     1
  [26] .symtab           SYMTAB           0000000000000000  00002040
       00000000000007f8  0000000000000018          27    48     8
  [27] .strtab           STRTAB           0000000000000000  00002838
       0000000000000388  0000000000000000           0     0     1
  [28] .shstrtab         STRTAB           0000000000000000  00002bc0
       00000000000000fe  0000000000000000           0     0     1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), l (large)
  I (info), L (link order), G (group), T (TLS), E (exclude), x (unknown)
  O (extra OS processing required) o (OS specific), p (processor specific)

Program Headers:
  Type           Offset             VirtAddr           PhysAddr
                 FileSiz            MemSiz              Flags  Align
  PHDR           0x0000000000000040 0x0000000000000040 0x0000000000000040
                 0x00000000000001f8 0x00000000000001f8  R      8
  INTERP         0x0000000000000238 0x0000000000000238 0x0000000000000238
                 0x000000000000001c 0x000000000000001c  R      1
      [Requesting program interpreter: /lib64/ld-linux-x86-64.so.2]
  LOAD           0x0000000000000000 0x0000000000000000 0x0000000000000000
                 0x00000000000011d8 0x00000000000011d8  R E    200000
  LOAD           0x0000000000001d38 0x0000000000201d38 0x0000000000201d38
                 0x00000000000002d8 0x00000000000002e8  RW     200000
  DYNAMIC        0x0000000000001d48 0x0000000000201d48 0x0000000000201d48
                 0x00000000000001f0 0x00000000000001f0  RW     8
  NOTE           0x0000000000000254 0x0000000000000254 0x0000000000000254
                 0x0000000000000044 0x0000000000000044  R      4
  GNU_EH_FRAME   0x0000000000000ff0 0x0000000000000ff0 0x0000000000000ff0
                 0x0000000000000064 0x0000000000000064  R      4
  GNU_STACK      0x0000000000000000 0x0000000000000000 0x0000000000000000
                 0x0000000000000000 0x0000000000000000  RW     10
  GNU_RELRO      0x0000000000001d38 0x0000000000201d38 0x0000000000201d38
                 0x00000000000002c8 0x00000000000002c8  R      1

 Section to Segment mapping:
  Segment Sections...
   00     
   01     .interp 
   02     .interp .note.ABI-tag .note.gnu.build-id .gnu.hash .dynsym .dynstr .gnu.version .gnu.version_r .rela.dyn .rela.plt .init .plt .plt.got .text .fini .rodata .eh_frame_hdr .eh_frame 
   03     .init_array .fini_array .dynamic .got .data .bss 
   04     .dynamic 
   05     .note.ABI-tag .note.gnu.build-id 
   06     .eh_frame_hdr 
   07     
   08     .init_array .fini_array .dynamic .got 
